name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install
        npm install -D @types/webpack@^5.28.5 ts-node@^10.9.2

    - name: Version Check
      id: version
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $PACKAGE_VERSION"

    - name: Build and Test
      run: |
        npm run format:check
        npm run lint
        npm run compile
        npm run build
      env:
        NODE_ENV: production

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: vsix-package
        path: "*.vsix"
        retention-days: 1

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3

    - name: Get version
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: vsix-package

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: "*.vsix"
        name: "Release v${{ steps.get_version.outputs.version }}"
        body: |
          ## What's Changed
          
          ### New Features üéâ
          - Auto-generated release notes
          
          ### Bug Fixes üêõ
          - Dependency updates
          
          ### Documentation üìö
          - Updated README
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  version:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          PATCH=$((VERSION_PARTS[2] + 1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          npm version $NEW_VERSION -m "Bump version to %s"
          git push
          git push --tags